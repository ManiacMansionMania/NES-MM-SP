// Vor der Villa (Edison Villa - Mansion)
int rand			= 0;
int waittime	= 0;

/****************************
*   Raum-Funktionen
****************************/
function room_FirstLoad()
{
  String seperator = String.Format("\\ **** Vor der Villa");
	hGitter.Enabled = false;
}

function room_Load()
{
	Door[eDoorNumHaustuer].Init(oTuer, hTuer);
	Door[eDoorNumGitter].Init(oGitter, hGitter);
	//hGitter.Enabled = true;
	
	SetTimer(1, 1);
}

function room_RepExec()
{
	if ( IsTimerExpired(1) )
	{
		rand = Random(2);
		PlaySound(96);
		waittime = (rand + 2) * 40;
		SetTimer(1, waittime);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumHaustuer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hGitter_AnyClick()
{
	if ( player.IsEdison() == true )
	{
		Door[eDoorNumGitter].s_LookAt					= "Da geht es unter das Haus.";
		Door[eDoorNumGitter].s_WrongItemOpen	= "Damit kriege ich das Gitter nicht auf.";
		Door[eDoorNumGitter].s_WrongItemClose	= "Damit kriege ich das Gitter nicht zu.";
		Door[eDoorNumGitter].s_IsLocked				= "Das Gitter geht nicht auf.";
	}
	else
	{
		Door[eDoorNumGitter].s_LookAt					= "Das ist ein Gitter.";
		Door[eDoorNumGitter].s_WrongItemOpen	= "Damit kriege ich das Gitter nicht auf.";
		Door[eDoorNumGitter].s_WrongItemClose	= "Damit kriege ich das Gitter nicht zu.";
		Door[eDoorNumGitter].s_IsLocked				= "Das Gitter geht nicht auf.";
	}
	
	if ( Door[eDoorNumGitter].ClickSpecial(31, 5, 1000, 0) == 0 ) Unhandled();
  /* if (UsedAction(eActWalkTo)){
    player.Walk(96, 127, eBlock);
    player.FaceDirection(eDirectionUp);
    Wait(5);
    player.ChangeRoom(40, 22, 133, eDirectionDown);
  }
  else if (UsedAction(eActLookAt)){
      player.Say("Da geht es unter das Haus.");
  }
  else Unhandled();*/
}

/****************************
*   Objekt-Funktionen
****************************/
function oBusch_AnyClick()
{
	if (any_click_move(112, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Den haben wir gepflanzt um das Gitter zu verdecken.");
			player.SayIfNotEdison("Der scheint was zu verdecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			//player.Say("Der ist gut verwurzelt. Dafür braucht es mehr als Muskelschmalz.");
			PlaySound(103);
			Wait(70);
			oBusch.Visible = false;
			hGitter.Enabled = true;
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Der ist zu klein um sich dahinter zu verstecken.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das lässt der Busch nicht mit sich machen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Busch sticht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist keine Edison-Gartenschere.");
		}
		else Unhandled();
	}
}

function oZeiger_AnyClick()
{
  if(any_click_move(36, 129, eDirectionDown))
  {
    if(UsedAction(eActPush) || UsedAction(eActPull))
    {
      Wait(5);
      hZeiger.Enabled=true;
      oZeiger.Visible=false;
    }
    else Unhandled();
  }
}



function oBriefkasten_AnyClick()
{
  if(any_click_move(36, 129, eDirectionLeft))
  {
    if(UsedAction(eActClose))
    {
      Wait(5);
      hBriefkasten.Enabled=true;
      oBriefkasten.Visible=false;
    }
    else if(UsedAction(eActOpen))
    {
      player.Say("Der ist bereits geöffnet.");
    }
    else Unhandled();
  }
}


function oFussmatte_AnyClick()
{
	if (any_click_move(402, 107, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hier versteckten wir früher oft den Haustürschlüssel.");
			player.SayIfIsEdison("Nicht wirklich ein gutes Versteck.");

			player.SayIfNotEdison("Ein gutes Versteck für einen Schlüssel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das dreckige Ding nehme ich nicht mit.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(4);
			oFussmatte.Visible = false;
			hFussmatte.Enabled = true;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Fußmatte ist bereits zurückgezogen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht darunter legen.");
		}
		else Unhandled();
	}
}

/****************************
*   Hotspot-Funktionen
****************************/
function hKlingel_AnyClick()
{
	if (any_click_move(204, 101, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hiermit können uns nervige Kinder belästigen.");
			player.SayIfNotEdison("Die Türklingel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(15);
			PlaySound(99);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Klingel kann man nicht ohne Werkzeug öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist bereits zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hSchild_AnyClick()
{
	if (any_click_move(440, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Was suchen wir eigentlich?", "Aushilfe gesucht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist innen an der Scheibe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Stelle annehmen?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Schild ist von außen nicht erreichbar.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else Unhandled();
	}
}

function hEinfahrt_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		if (any_click_move(956, 12, eDirectionRight))
		{
		}
	}
	else if (any_click_move(946, 12, eDirectionRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Unsere Einfahrt.", "Die Einfahrt zum Edison-Mansion.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich könnte etwas Staub vom Boden aufheben, mehr aber nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nur mit dem Auto.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) 
		      || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das lässt die Einfahrt nicht mit sich machen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das auf die Einfahrt zu legen macht keinen Sinn.");
		}
		else Unhandled();
	}
}

function hFussmatte_AnyClick()
{
	if (any_click_move(174, 111, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hier versteckten wir früher oft den Haustürschlüssel.");
			player.SayIfIsEdison("Nicht wirklich ein gutes Versteck.");

			player.SayIfNotEdison("Ein gutes Versteck für einen Schlüssel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das dreckige Ding nehme ich nicht mit.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
      
			PlaySound(4);
			oFussmatte.Visible = true;
			hFussmatte.Enabled = false;
      
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Fußmatte liegt bereits gerade.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht darunter legen.");
		}
		else Unhandled();
	}
}

function hGitterSchild_AnyClick()
{
	if (any_click_move(440, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			int ran1=Random(9);
			int ran2=Random(9);
			int ran3=Random(9);
			int ran4=Random(9);
						
			if ( player.IsEdison() )
			{
				player.Say("Unsere Adresse, ...");
			}
			player.Say("%d%d%d%d Cemetery Lane.", ran1, ran2, ran3, ran4);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Schild ist festgeschraubt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was bitte?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich könnte es mit einem alkohol-getränkten Lappen abputzen, aber nicht damit.");
		}
		else Unhandled();
	}
}

function hBriefkasten_AnyClick()
{
  if(any_click_move(36, 129, eDirectionLeft))
  {
    if(UsedAction(eActOpen))
    {
      Wait(5);
      hBriefkasten.Enabled=false;
      oBriefkasten.Visible=true;
    }
    else if(UsedAction(eActClose))
    {
      player.Say("Der ist bereits geschlossen.");
    }
    else Unhandled();
  }
}

function hZeiger_AnyClick()
{
  if(any_click_move(36, 129, eDirectionDown))
  {
    if(UsedAction(eActPush) || UsedAction(eActPull))
    {
      Wait(5);
      hZeiger.Enabled=false;
      oZeiger.Visible=true;
    }
    else Unhandled();
  }
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(41, 65, 138);
}




