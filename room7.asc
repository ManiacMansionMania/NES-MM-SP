// Küche (Edison Mansion)
bool gb_Wasserhahn;

/****************************
*   andere-Funktionen
****************************/
void PlayWaterSound()
{
	AudioChannel *channel = aSound95.Play(eAudioPriorityNormal, eRepeat);
				
	if ( null != channel )
	{
		channel.Volume = 80;
		channel.SetRoomLocation(267, 140);
	}
}


				
/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Küche");
	Door[eDoorNumKueche].Init(oTuerFlur, hTuerFlur);
	Door[eDoorNumEsszimmer].Init(oTuerEsszimmer, hTuerEsszimmer);
	
	if ( gb_Wasserhahn )
	{
		PlayWaterSound();
	}
}

function room_Leave()
{
	aSound95.Stop();
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerFlur_AnyClick()
{
	if ( Door[eDoorNumKueche].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hTuerEsszimmer_AnyClick()
{
	if ( Door[eDoorNumEsszimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oMikrowelle_AnyClick()
{
	if (any_click_move(130, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("Ich hasse diese Mikrowelle.");
			cEdna.SayIfPlayer("Darin bereite ich immer die Speisen zu.");
			cFred.SayIfPlayer("Unsere Mikrowelle.");
			player.SayIfNotEdison("Eine mächtige Maschine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich bekomme meine Finger nicht zwischen den Rahmen und das Gehäuse.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nie eine leere Mikrowelle einschalten.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(5);
			oMikrowelle.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Mikrowelle sitzt bereits ganz im Fach.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht erwärmen.");
		}
		else Unhandled();
	}
}

function oKuehlschrank_AnyClick()
{
	if (any_click_move(390, 141, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da steht jede Menge Zeug drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist noch auf.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der Kühlschrank ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(5);
			oKuehlschrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich da nicht reinlegen.");
		}
		else Unhandled();
	}
}

function oWasser_AnyClick()
{
	if (any_click_move(267, 140, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Iiih!");
			player.Say("Wasser.");
			player.FaceDirection(eDirectionDown);
			player.Say("Fische lieben sich darin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann wird es nass.");
		}
		else Unhandled();
	}
}

function oKettensaege_AnyClick()
{
	if (any_click_move(200, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Kann manchmal sehr nützlich sein.", "Die braucht Benzin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Wir haben eh' kein Benzin im Haus.", "Nein, die brauche ich im Moment nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wozu?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Öltank für die Kettenschmierung ist noch voll.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nicht ohne Benzin.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist kein Benzin.");
			//player.Say("Das ist das falsche Benzin. Die Kettensäge braucht eine Zweitakt-Mischung");
		}
		else Unhandled();
	}
}

function oTaschenlampe_AnyClick()
{
	if (any_click_move(96, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Könnte nützlich sein.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			PlaySound(4);
			oTaschenlampe.Visible = false;
			player.AddInventory(iTaschenlampeOff);
			gb_HasMaglite	= true;
			
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich sollte sie vorher nehmen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Betteriekappe ist bereits drauf geschraubt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde nur den Lack unnötig verkratzen ...");
			player.Say("Obwohl, der hat seine besten Tage auch schon hinter sich.");
			player.Say("Aber ich mach's trotzdem nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das muss nicht angeleuchtet werden. Und wenn, dann sollte ich die Taschenlampe doch besser in der Hand haben.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hMikrowelle_AnyClick()
{
	if (any_click_move(130, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("Ich hasse diese Mikrowelle.");
			cEdna.SayIfPlayer("Darin bereite ich immer die Speisen zu.");
			cFred.SayIfPlayer("Unsere Mikrowelle.");
			player.SayIfNotEdison("Eine mächtige Maschine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich bekomme meine Finger nicht zwischen den Rahmen und das Gehäuse.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nie eine leere Mikrowelle einschalten.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist bereits zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht erwärmen.");
		}
		else Unhandled();
	}
}

function hHerd_AnyClick()
{
	if (any_click_move(136, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEdna.SayIfPlayer("Den habe ich schon lange nicht mehr genutzt.");
			player.SayIfIsEdison("Wird bei uns nie gebraucht.");
			player.SayIfNotEdison("Wurde wohl schon lange nicht mehr benutzt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist fest in die Küche eingebaut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bevorzuge die Mikrowelle.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nein. Der ist mir zu dreckig.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Herd ist doch schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich drücke den Herd ... dadada.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht in diesem Herd.");
		}
		else Unhandled();
	}
}

function hMesser_AnyClick()
{
	if (any_click_move(180, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("Die werden bei uns oft genutzt.");
			cEdna.SayIfPlayer("Die benutze ich sehr oft.");
			cEdna.SayIfPlayer("Sind wohl deshalb so stumpf.");
			cFred.SayIfPlayer("Die werden bei uns oft genutzt.");
			player.SayIfNotEdison("Die sind wirklich sehr stumpf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind an der Wand festgeklebt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wenn ich was zum zerschneiden und sie vorher geschärft habe, dann gerne.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht schneiden.");
		}
		else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
	if (any_click_move(267, 140, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dass läuft das Wasser ohne Unterlass.");
		}
		else if (UsedAction(eActUse))
		{
			if ( oWasser.Visible )
			{
				oWasser.Visible = false;
				gb_Wasserhahn = false;
				aSound95.Stop();
			}
			else
			{
				oWasser.Visible = true;
				gb_Wasserhahn = true;
				PlayWaterSound();
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
				player.Say("Das Wasser läuft bereits.");
			}
			else
			{
				oWasser.Visible = true;
				gb_Wasserhahn = true;
				PlayWaterSound();
				oWasser.SetView(56);
				oWasser.Animate(0, 0, eRepeat, eNoBlock);
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
				oWasser.Visible = false;
				gb_Wasserhahn = false;
				aSound95.Stop();
			}
			else
			{
				player.Say("Der Wasserhahn ist doch schon zu.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
	if (any_click_move(390, 141, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			//player.SayIfIsEdisonElse("Unser Kühlschrank.", "Edisons' Kühlschrank. Effiktivitätsklasse Z.");
			player.SayIfIsEdisonElse("Ob da was drin ist?", "Da läuft rotes Zeugs heraus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich könnte einen Magnethafti anbringen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
      
      if ( oKuehlschrank.Visible == true )
      {
        player.Say("Der Kühlschrank ist schon auf.");
      }
      else
      {
        PlaySound(1);
        oKuehlschrank.Visible = true;
      }
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			
      if ( oKuehlschrank.Visible == true )
      {
        PlaySound(5);
        oKuehlschrank.Visible = false;
      }
      else
      {
        player.Say("Der ist doch schon zu.");
      }
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das wird im Kühlschrank nur schlecht.");
		}
		else Unhandled();
	}
}

function hBlut_AnyClick()
{
	if (any_click_move(210, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Ich habe mich schon immer gefragt wo das herkommt.", "Igitt!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kratz das doch nicht von der Wand.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich möchte keine Blutwurst machen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ja geht's noch.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ja geht's noch.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich nicht mit dem angetrockneten Blut verwenden.");
		}
		else Unhandled();
	}
}

function hFensterLinks_AnyClick()
{
	if (any_click_move(280, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ganz schön dunkel draußen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Fenster lässt sich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das bleibt zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das bleibt zu.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich nicht mit dem Fenster.");
		}
		else Unhandled();
	}
}



/****************************
*   Regionen-Funktionen
****************************/
