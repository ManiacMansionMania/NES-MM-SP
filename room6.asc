// Eingangshalle (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Eingangsflur");
	Door[eDoorNumHaustuer].Init(oHaustuer, hHaustuer);
	Door[eDoorNumKueche].Init(oKuechentuer, hKuechentuer);
	Door[eDoorNumWohnzimmer].Init(oWohnzimmertuerNEU, hWohnzimmertuer);
	Door[eDoorNumKeller].Init(oKellertuer, hKellertuer);
  
	if ( player.PreviousRoom == 12 && player.InventoryQuantity[iTaschenlampeOn.ID] )
	{
		player.LoseInventory(iTaschenlampeOn);
		PlaySound(60);
		player.AddInventory(iTaschenlampeOff);
	}
  
  if (player.PreviousRoom == 12){
    Door[eDoorNumKeller].Open();
    gb_KoboldPressed = true;
  }


	oGrossvateruhr.Clickable = false;
	oGrossvateruhr.SetView(57);
	oGrossvateruhr.Animate(0, 80, eRepeat, eNoBlock, eForwards);

	
}

function room_AfterFadeIn()
{
	if ( player.PreviousRoom == 9 )
	{
		gb_KoboldPressed = true;
		
		if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
		{
			player.LoseInventory(iTaschenlampeOn);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOff);
		}
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hHaustuer_AnyClick()
{
	if ( Door[eDoorNumHaustuer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hKuechentuer_AnyClick()
{
	if ( Door[eDoorNumKueche].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hWohnzimmertuer_AnyClick()
{
	if ( Door[eDoorNumWohnzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hKellertuer_AnyClick()
{
	if ( !gb_DoorWithKobold )
	{
		if ( Door[eDoorNumKeller].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
	}
	else if (any_click_move(Door[eDoorNumKeller].i_XPosition, Door[eDoorNumKeller].i_YPosition, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
			if ( gb_KoboldPressed )
			{
			  player.ChangeRoom(Door[eDoorNumKeller].l_NewRoom, Door[eDoorNumKeller].i_NewXPosition, Door[eDoorNumKeller].i_NewYPosition);
				player.FaceDirection(eDirectionDown); 
			}
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( gb_KoboldPressed )
			{
				player.Say("Das ist die Tür zum Keller.");
			}
			else
			{
				player.Say("Das ist die Tür zum Keller.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das wird schwierig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( gb_KoboldPressed )
			{
				player.Say("Die Tür ist schon auf.");
			}
			else
			{
				player.Say("Sie hat keinen Knauf.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( gb_KoboldPressed && gb_DoorWithKobold )
			{
				player.Say("So kann ich sie nicht schliessen.");
			}
			else if ( gb_DoorWithKobold )
			{
				player.Say("Sie ist bereits geschlossen.");
			}
			else
			{
				Door[eDoorNumKeller].Close();
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Und dann?");
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oKoboldRechts_AnyClick()
{
	if (any_click_move(342, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Endlich wurden diese Dinger repariert.");
			player.FaceDirectionIfEdison(eDirectionDown);
			player.SayIfIsEdison("Jetzt können sie nicht mehr zufallen.");
			player.SayIfNotEdison("Sieht irgendwie gruselig aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			if ( Door[eDoorNumKeller].i_GlobalInt != 2 ) // Kellertür
			{
				if ( !gb_KoboldPressed )
				{
					gb_KoboldPressed = true;
					oKellertuer.Graphic = 118; // Tür ohne Knauf
					Door[eDoorNumKeller].Open();
					PlaySound(2);
				}
				else
				{
					//player.Say("Die Tür ist schon auf.");
					gb_KoboldPressed = false;
					oKellertuer.Graphic = 118; // Tür ohne Knauf
					Door[eDoorNumKeller].Close();
					PlaySound(3);
				}
			}
			else if ( Door[eDoorNumKeller].i_GlobalInt == 2 ) // Kellertür
			{
				player.Say("Nichts passiert.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Drücken hilft.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nicht zu schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der bewegt sich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will der Kobold nicht.");
		}
		else Unhandled();
	}
}

function oKoboldLinks_AnyClick()
{
	/* Kobold Links ist nicht klickbar */
}

function oAbsperrung_AnyClick()
{
	// nur sichtbar, wenn Bereich abgesperrt ist.
	if (any_click_move(300, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kann ich nicht lang.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Absperrung hat schon seinen Grund.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die ist da aus gutem Grund.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Absperrung ist da aus gutem Grund.");
			player.Say("Wenn ich sie entferne, dann geht noch jemand nach oben");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich mit dem Plastikband nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hGrossvateruhr_AnyClick()
{
	if (any_click_move(71, 129, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player.IsEdison() )
			{
				player.Say("Großvater Red's Standuhr.");
				player.FaceDirection(eDirectionDown);
				player.Say("Das Einzige was von ihm übrig blieb.");
			}
			else
			{
				player.Say("Eine Standuhr.");
				player.FaceDirection(eDirectionDown);
				player.Say("Die Uhrzeit stimmt genau.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die lasse ich stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( player.IsEdison() )
			{
				if ( player == cFred )
				{
					player.Say("Das hatte ich schon immer mal vorgehabt.");
					player.FaceDirection(eDirectionDown);
					player.Say("Eine Verbindung direkt ins Labor.");
				}
				else
				{
					player.Say("Das hatten wir schon immer mal vorgehabt.");
				}
			}
			else
			{
				player.Say("Das hier ist nicht DOTT.");
			}
		}
		else Unhandled();
	}
}

function hPflanzeLinks_AnyClick()
{
	if (any_click_move(231, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Diese Pflanzen haben auch schon bessere Zeiten gesehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich habe genug.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die könnten etwas Wasser vertragen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das mag die Pflanze nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("So, jetzt sie besser aus.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum sollte ich das in den Blumentopf legen wollen?");
		}
		else Unhandled();
	}
}

function hTreppeOben_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
    any_click_move(218, 28, eDirectionUp);
	}
	else Unhandled();
}

function hKoboldRechts_AnyClick()
{
	if (any_click_move(256, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player.IsEdison() )
			{
				player.Say("Niedlich.");
			}
			else
			{
				player.Say("Ein Kobold.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
      if (oKellertuer.Visible == false){
        Door[eDoorNumKeller].Open();
        PlaySound(2);
        gb_KoboldPressed = true;
      }else{
        player.Say("Die Kellertür ist bereits geöffnet.");
      }
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der lässt sich nicht schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("An dem Kobold kann man nicht viel ziehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich nicht mit dem Kobold.");
		}
		else Unhandled();
	}
}

function hPflanzeRechts_AnyClick()
{
	if (any_click_move(382, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Diese Pflanzen haben auch schon bessere Zeiten gesehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich habe genug.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die könnten etwas Wasser vertragen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das mag die Pflanze nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("So, jetzt sie besser aus.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum sollte ich das in den Blumentopf legen wollen?");
		}
		else Unhandled();
	}
}

function hTreppeUnten_AnyClick()
{
	if (any_click_move(300, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( gb_TreppenFlurErsterStock )
			{
				player.Say("Da geht es ins erste Stockwerk.");
			}
			else
			{
				player.Say("Da kann ich nicht lang.");
			}
			player.Say("");
		}
		else Unhandled();
	}
}

function hKoboldLinks_AnyClick()
{
	if (any_click_move(184, 134, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Niedlich");
			player.SayIfNotEdison("Sieht irgendwie gruselig aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der lässt sich nicht schließen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("An dem Kobold kann man nicht viel ziehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich nicht mit dem Kobold.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(20, 163, 134);
}
